#!/usr/bin/python

import os
import string
import sys

import eyeD3
from vendor.pyat import pyat

get_fields = ('artist', 'album', 'title')
display_fields = ('artist', 'album', 'title')

def get_songs_from_files(files, fields):
  """Yield dictionaries of song data for a list of files"""
  tag = eyeD3.Tag()
  formatter = lambda field: 'get%s' % string.capwords(field)
  for filename in files:
    if not filename.endswith('.mp3'): continue
    tag.link(filename)
    song = dict(filename=filename, shortfilename=os.path.basename(filename))
    song.update(
       dict((
        field,
        getattr(tag, formatter(field))()
        ) for field in fields
      )
    )
    yield song


def get_operations():
  """Very rudimentary argv parser"""
  fieldset = dict()
  for arg in sys.argv[2:]:
    if arg.startswith('--'):
      field, value = arg[2:].split('=')
      if field in get_fields:
        fieldset[field] = value
  return fieldset

if __name__ == '__main__':
  print sys.argv
  if len(sys.argv) < 2:
    raise RuntimeError('Need to specify MP3 as first argument')
  infile = sys.argv[1]
  if not os.path.exists(infile):
    raise RuntimeError('Input file "%s" does not exist' % infile)

  if os.path.isdir(infile):
    files = [infile + file for file in os.listdir(infile)]
  elif os.path.isfile(infile):
    files = [infile]
  else:
    raise RuntimeError("Didn't know how to open file: %s" % infile)

  operations = get_operations()
  print "Operations to perform: %s" % operations

  songs = list(get_songs_from_files(files, get_fields))
  print pyat.format(songs, display_fields)

